<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="sourceCode" type="xstring" value="%%00010%%00010########################################################################%%00010############################ SCRIPT SETTINGS ###########################%%00010########################################################################%%00010%%00010### correlation settings%%00010# correlation method ('pearson', 'kendall', 'spearman')%%00010correlation_method = flow_variables['correlation_method']%%00010%%00010### clustering settings%%00010%%00010# metric: e.g. 'cityblock', 'euclidean'%%00010distance_metric = flow_variables['distance_metric']%%00010%%00010# method: e.g. 'complete', 'average'%%00010cluster_method = flow_variables['cluster_method']%%00010%%00010### clustermap settings%%00010%%00010# center of the color map; e.g. 0, None (if it should be ignored and values interval should be used instead)%%00010if flow_variables['manual_clustermap_center'] == 0:%%00010%%00009clustermap_center = None%%00010%%00010else:%%00010%%00009clustermap_center = flow_variables['clustermap_center_value']%%00010%%00010if flow_variables['show_raw_data'] == 1:%%00010%%00009show_annotation = True%%00010else:%%00010%%00009show_annotation = False%%00010%%00010# color pallete to be used, e.g. 'RdBu_r', 'Blues'%%00010colormap = flow_variables['clustermap_colormap']%%00010%%00010# font sizes%%00010axis_fontsize = 10%%00010annot_fontsize = 8%%00010%%00010########################################################################%%00010########################################################################%%00010%%00010%%00010import seaborn as sns%%00010import matplotlib.pyplot as plt%%00010import pandas%%00010from io import BytesIO%%00010%%00010# deleted cases and columns where there is not a single value%%00010input_table_dropped_all = input_table.dropna(axis=1, how='all')%%00010input_table_dropped_all = input_table_dropped_all.dropna(axis=0, how='all')%%00010%%00010# sets the image size based on the columns to display count or manually set size%%00010if flow_variables['figsize'] == &quot;Auto&quot;:%%00010%%00009columns_to_display = input_table_dropped_all.shape[1]%%00010%%00009if columns_to_display &gt; 25:%%00010%%00009%%00009size = columns_to_display/2.5%%00010%%00009else:%%00010%%00009%%00009size = 10%%00010%%00009figsize = [size,size]%%00010else:%%00010%%00009figsize = [float(item) for item in flow_variables['figsize'].split(';')]%%00010%%00010%%00010# sets the visual style of seaborn figure%%00010# sns.set(style=&quot;whitegrid&quot;)%%00010sns.set()%%00010%%00010# creates clustermap using correlation matrix of input dataframe%%00010# sns.clustermap(data_numeric.corr(), center=0, cmap=&quot;Spectral&quot;,)%%00010g = sns.clustermap(input_table_dropped_all.corr(method=correlation_method),%%00010               method=cluster_method, metric=distance_metric, annot = show_annotation, %%00010               center=clustermap_center, cmap=colormap, figsize=figsize, annot_kws={&quot;fontsize&quot;:annot_fontsize})%%00010%%00010plt.title('Clustermap of pairwise ' + correlation_method + ' correlation coefficients \n'%%00010          'Clustering settings: Distance metric: ' + distance_metric + ', Clustering method: ' + cluster_method + '\n' +%%00010          flow_variables['graph_subtitle'],%%00010          loc='left')%%00010%%00010# rotates labels on x and y axis%%00010plt.setp(g.ax_heatmap.get_yticklabels(), rotation=0, fontsize=axis_fontsize)  # For y axis%%00010plt.setp(g.ax_heatmap.get_xticklabels(), rotation=90, fontsize=axis_fontsize) # For x axis%%00010%%00010#plt.tight_layout()%%00010%%00010# Create buffer to write into%%00010buffer = BytesIO()%%00010%%00010# Creates plot and write it into the buffer%%00010# data.plot().get_figure().savefig(buffer, format='svg')%%00010plt.savefig(buffer, format='png', bbox_inches='tight')%%00010# plt.show()%%00010%%00010# The output is the content of the buffer%%00010output_image = buffer.getvalue()%%00010"/>
        <entry key="rowLimit" type="xint" value="1000"/>
        <entry key="convertMissingToPython" type="xboolean" value="false"/>
        <entry key="convertMissingFromPython" type="xboolean" value="false"/>
        <entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
        <entry key="sentinelValue" type="xint" value="0"/>
        <entry key="chunkSize" type="xint" value="500000"/>
        <entry key="pythonVersionOption" type="xstring" value="python3"/>
        <entry key="python2Command" type="xstring" value=""/>
        <entry key="python3Command" type="xstring" value="/home/knimeuser/.pyenv/versions/4-5-2a/bin/python3"/>
    </config>
    <config key="variables">
        <entry key="version" type="xstring" value="V_2019_09_13"/>
        <config key="tree">
            <config key="python3Command">
                <entry key="used_variable" type="xstring" value="python3command"/>
                <entry key="exposed_variable" type="xstring" isnull="true" value=""/>
            </config>
        </config>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="correlation heatmap %%00010with clustering"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="635"/>
        <entry key="y-coordinate" type="xint" value="559"/>
        <entry key="width" type="xint" value="142"/>
        <entry key="height" type="xint" value="32"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="10"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles"/>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="IDLE"/>
    <entry key="factory" type="xstring" value="org.knime.python2.nodes.view.Python2ViewNodeFactory"/>
    <entry key="node-name" type="xstring" value="Python View"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.5.0.v202111232310"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.5.2.v202203041212"/>
    <config key="factory_settings"/>
    <entry key="name" type="xstring" value="Python View"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>
