<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="sourceCode" type="xstring" value="import seaborn as sns%%00010import matplotlib.pyplot as plt%%00010import pandas%%00010import os%%00010from io import BytesIO%%00010%%00010sns.set(style=&quot;whitegrid&quot;)%%00010%%00010# initial graph title text%%00010plttitle = 'Kernel density graph(s) \n'%%00010%%00010# adds subtitle to the title string if not empty%%00010if flow_variables['graph_subtitle'] != &quot;&quot;:%%00010%%00009plttitle = plttitle + flow_variables['graph_subtitle'] + '\n'%%00010%%00010# deleted cases and columns where there is not a single value%%00010input_table = input_table.dropna(axis=0, how='all')%%00010input_table = input_table.dropna(axis=1, how='all')%%00010%%00010fig, ax = plt.subplots()%%00010if flow_variables['plot_size'].strip() != 'Auto':%%00010%%00009width, height = flow_variables['plot_size'].split(';')%%00010%%00009width = width.strip()%%00010%%00009height = height.strip()%%00010%%00009fig.set_size_inches(float(width), float(height))%%00010%%00009%%00010# creates the basic plot for each column iteratively%%00010for i in list(input_table.columns):%%00010%%00009g = sns.kdeplot(input_table[i])%%00010%%00010%%00010%%00010# plot description%%00010#plt.xlabel(flow_variables['x_axis_label'])%%00010plt.xlabel(flow_variables['x_axis_label'])%%00010plt.ylabel('Density')%%00010plt.title(plttitle, weight='semibold')%%00010%%00010# sets tight plot layout so it fits properly%%00010plt.tight_layout()%%00010%%00010## sets graph x axis limit if they should be set manually%%00010if flow_variables['x_axis_limits'] != 'Auto':%%00010%%00009x_axis_limits = [float(item) for item in flow_variables['x_axis_limits'].split(';')]%%00010%%00009g.set(xlim=(x_axis_limits[0], x_axis_limits[1]))%%00010%%00010if flow_variables['center_line'] != 'None':%%00010%%00009plt.axvline(x=float(flow_variables['center_line']))%%00010%%00010# Create buffer to write into%%00010buffer = BytesIO()%%00010%%00010# Create plot and write it into the buffer%%00010plt.savefig(buffer, format='png')%%00010%%00010# The output is the content of the buffer%%00010output_image = buffer.getvalue()%%00010"/>
<entry key="rowLimit" type="xint" value="1000"/>
<entry key="pythonVersionOption" type="xstring" value="python3"/>
<entry key="python2Command" type="xstring" value=""/>
<entry key="python3Command" type="xstring" value=""/>
<entry key="chunkSize" type="xint" value="500000"/>
<entry key="convertMissingToPython" type="xboolean" value="false"/>
<entry key="convertMissingFromPython" type="xboolean" value="false"/>
<entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
<entry key="sentinelValue" type="xint" value="0"/>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="kernel density plot script"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="719"/>
<entry key="y-coordinate" type="xint" value="279"/>
<entry key="width" type="xint" value="162"/>
<entry key="height" type="xint" value="17"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="16777215"/>
<entry key="defFontSize" type="xint" value="10"/>
<entry key="annotation-version" type="xint" value="20151123"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="IDLE"/>
<entry key="factory" type="xstring" value="org.knime.python2.nodes.view.Python2ViewNodeFactory"/>
<entry key="node-name" type="xstring" value="Python View"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="4.1.3.v202005112253"/>
<entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="4.1.3.v202005112253"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Python View"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
