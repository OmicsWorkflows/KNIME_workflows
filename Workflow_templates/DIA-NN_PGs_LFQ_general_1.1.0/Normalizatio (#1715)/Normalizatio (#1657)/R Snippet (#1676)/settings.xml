<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="script" type="xstring" value="library(dplyr)%%00010df &lt;- knime.in%%00010%%00010# Get lists of proteins%%00010included &lt;- unlist(strsplit(knime.flow.in[[&quot;column_selection&quot;]],&quot;,&quot;))%%00010all_samples &lt;- unlist(strsplit(knime.flow.in[[&quot;all_samples&quot;]], &quot;,&quot;))%%00010excluded &lt;- setdiff(all_samples, included)%%00010%%00010# Find longest sample name%%00010longest_sample &lt;- all_samples[which.max(nchar(all_samples))]%%00010%%00010# Find columns which contain longest sample name%%00010colnames_with_longest_sample &lt;- df %&gt;%%%00010%%00009select(contains(longest_sample)) %&gt;%%%00010%%00009colnames()%%00010%%00010# Find all prefixes and suffixes%%00010prefix &lt;- rep(&quot;&quot;, times = length(colnames_with_longest_sample))%%00010suffix &lt;- rep(&quot;&quot;, times = length(colnames_with_longest_sample))%%00010%%00010for (name in colnames_with_longest_sample) {%%00010%%00009i &lt;- which(colnames_with_longest_sample == name)%%00010%%00009prefix_i &lt;- regexpr(longest_sample, name)-1%%00010%%00009prefix[i] &lt;- substr(name, 1, prefix_i)%%00010%%00009suffix_i &lt;- prefix_i + nchar(longest_sample)+1%%00010%%00009suffix[i] &lt;- substr(name, suffix_i, nchar(name))%%00010}%%00010%%00010# Generate all acceptable column names%%00010acceptable_colnames &lt;- rep(&quot;&quot;, times = length(included)*length(colnames_with_longest_sample))%%00010sample_index &lt;- rep(1:length(included), each = length(colnames_with_longest_sample))%%00010colname_index &lt;- rep(1:length(colnames_with_longest_sample), times = length(included))%%00010%%00010for (i in 1:length(acceptable_colnames)){%%00010%%00009x &lt;- sample_index[i]%%00010%%00009y &lt;- colname_index[i]%%00010%%00010%%00009acceptable_colnames[i] &lt;- paste(prefix[y], included[x], suffix[y], sep = &quot;&quot;)%%00010}%%00010%%00010# Only get columns with acceptable column names%%00010df &lt;- df[,which(colnames(df) %in% acceptable_colnames)]%%00010%%00010knime.out &lt;- df"/>
        <entry key="templateUUID" type="xstring" isnull="true" value=""/>
        <entry key="version" type="xstring" value="version 1.x"/>
        <entry key="Output non numbers (NaN, Inf, -Inf) as missing cells" type="xboolean" value="false"/>
        <entry key="sendRowNames" type="xboolean" value="true"/>
        <entry key="sendBatchSize" type="xint" value="10000"/>
        <entry key="knimeInType" type="xstring" value="data.frame"/>
        <entry key="overwriteRHome" type="xboolean" value="true"/>
        <entry key="rHome" type="xstring" value="/home/knimeuser/.Renv/4.2.0/4.5.2a/lib/R"/>
        <entry key="useRPathHome" type="xboolean" value="true"/>
        <entry key="condaVariableName" type="xstring" isnull="true" value=""/>
    </config>
    <config key="variables">
        <config key="tree">
            <config key="rHome">
                <entry key="used_variable" type="xstring" value="Rcommand"/>
                <entry key="exposed_variable" type="xstring" isnull="true" value=""/>
            </config>
        </config>
        <entry key="version" type="xstring" value="V_2019_09_13"/>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="sample exclusion"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="269"/>
        <entry key="y-coordinate" type="xint" value="459"/>
        <entry key="width" type="xint" value="142"/>
        <entry key="height" type="xint" value="17"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="10"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles">
            <config key="style_0">
                <entry key="start" type="xint" value="0"/>
                <entry key="length" type="xint" value="16"/>
                <entry key="fontname" type="xstring" value="Sans"/>
                <entry key="fontstyle" type="xint" value="0"/>
                <entry key="fontsize" type="xint" value="10"/>
                <entry key="fgcolor" type="xint" value="0"/>
            </config>
        </config>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="IDLE"/>
    <entry key="factory" type="xstring" value="org.knime.r.RSnippetNodeFactory"/>
    <entry key="node-name" type="xstring" value="R Snippet"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME R-Project nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.r"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.6.0.v202205161326"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Interactive R Statistics Integration"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.r.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.6.0.v202205161326"/>
    <config key="factory_settings"/>
    <entry key="name" type="xstring" value="R Snippet"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>
