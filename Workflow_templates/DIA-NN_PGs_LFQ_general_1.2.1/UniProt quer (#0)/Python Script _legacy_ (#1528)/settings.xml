<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="sourceCode" type="xstring" value="from pandas import DataFrame%%00010%%00010def get_output_table():%%00010    # creates initial set of lists to be used later on%%00010    initial_accession_ids_list = list()%%00010    accession_ids_list = list()%%00010    accession_woprefix_ids_list = list()%%00010    accession_woprefix_wosuffix_ids_list = list()%%00010    body_content = input_table_1.copy()[flow_variables[&quot;accession_id_column_name&quot;]]%%00010    # creates initial set of IDs, skips the missing values%%00010    for key, value in body_content.iteritems():%%00010        if value != None:%%00010            for accession_id in value.split(flow_variables['proteinIDs_delimiter']):%%00010                initial_accession_ids_list.append(accession_id)%%00010    %%00010    # copies the original set of accessions to remove the prefixes and suffixes in them in the next steps%%00010    accession_woprefix_wosuffix_ids_list = initial_accession_ids_list%%00010    %%00010    # removes the prefixes if the input string is not empty%%00010    if flow_variables['prefix_to_remove'] != &quot;&quot;:%%00010        prefixes_list = flow_variables['prefix_to_remove'].split(flow_variables['separator'])%%00010        #print(prefixes_list)%%00010        for prefix in prefixes_list:%%00010            accession_woprefix_wosuffix_ids_list = [str(i).removeprefix(prefix) for i in accession_woprefix_wosuffix_ids_list]%%00010    %%00010    # removes the suffixes if the input string is not empty%%00010    if flow_variables['suffix_to_remove'] != &quot;&quot;:%%00010        suffixes_list = flow_variables['suffix_to_remove'].split(flow_variables['separator'])%%00010        #print(suffixes_list)%%00010        for suffix in suffixes_list:%%00010            accession_woprefix_wosuffix_ids_list = [str(i).removesuffix(suffix) for i in accession_woprefix_wosuffix_ids_list]%%00010    %%00010    # creates list of tupples combining intial set of IDs and IDs without common prefix and or suffix as requested%%00010    data_for_df = list(zip(initial_accession_ids_list, accession_woprefix_wosuffix_ids_list))%%00010    %%00010    # creates a dataframe to be returned based on the list of tupples%%00010    return DataFrame(data_for_df, columns=[&quot;initial_protein_id&quot;, &quot;protein_id&quot;])%%00010%%00010output_table_1 = get_output_table()"/>
        <entry key="rowLimit" type="xint" value="1000"/>
        <entry key="convertMissingToPython" type="xboolean" value="false"/>
        <entry key="convertMissingFromPython" type="xboolean" value="false"/>
        <entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
        <entry key="sentinelValue" type="xint" value="0"/>
        <entry key="chunkSize" type="xint" value="500000"/>
        <entry key="pythonVersionOption" type="xstring" value="python3"/>
        <entry key="python2Command" type="xstring" value=""/>
        <entry key="python3Command" type="xstring" value="/home/knimeuser/.pyenv/versions/4-5-2a/bin/python3"/>
    </config>
    <config key="variables">
        <entry key="version" type="xstring" value="V_2019_09_13"/>
        <config key="tree">
            <config key="python3Command">
                <entry key="used_variable" type="xstring" value="python3command"/>
                <entry key="exposed_variable" type="xstring" isnull="true" value=""/>
            </config>
        </config>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="parse accession ids"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="169"/>
        <entry key="y-coordinate" type="xint" value="379"/>
        <entry key="width" type="xint" value="142"/>
        <entry key="height" type="xint" value="17"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="10"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles">
            <config key="style_0">
                <entry key="start" type="xint" value="0"/>
                <entry key="length" type="xint" value="19"/>
                <entry key="fontname" type="xstring" value="Sans"/>
                <entry key="fontstyle" type="xint" value="0"/>
                <entry key="fontsize" type="xint" value="10"/>
                <entry key="fgcolor" type="xint" value="0"/>
            </config>
        </config>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="IDLE"/>
    <entry key="factory" type="xstring" value="org.knime.python2.nodes.script2.Python2ScriptNodeFactory2"/>
    <entry key="node-name" type="xstring" value="Python Script (legacy)"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.7.0.v202211291448"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Python 2 Integration (legacy)"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.7.1.v202301311311"/>
    <config key="factory_settings"/>
    <config key="node_creation_config">
        <config key="Input object (pickled)"/>
        <config key="Input table">
            <config key="port_0">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
        <config key="Output table">
            <config key="port_0">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
        <config key="Output image"/>
        <config key="Output object (pickled)"/>
    </config>
    <entry key="name" type="xstring" value="Python Script (legacy)"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>
