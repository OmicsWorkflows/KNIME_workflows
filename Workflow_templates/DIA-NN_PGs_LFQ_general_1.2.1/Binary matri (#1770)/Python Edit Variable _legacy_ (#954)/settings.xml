<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack">
        <config key="Variable_0">
            <entry key="type" type="xstring" value="variable"/>
            <entry key="name" type="xstring" value="thresholds"/>
            <entry key="class" type="xstring" value="STRING"/>
            <entry key="value" type="xstring" value="60"/>
        </config>
        <config key="Variable_1">
            <entry key="type" type="xstring" value="variable"/>
            <entry key="name" type="xstring" value="suffix_to_append_regex"/>
            <entry key="class" type="xstring" value="STRING"/>
            <entry key="value" type="xstring" value="$1_bin"/>
        </config>
        <config key="Variable_2">
            <entry key="type" type="xstring" value="variable"/>
            <entry key="name" type="xstring" value="if_switch"/>
            <entry key="class" type="xstring" value="STRING"/>
            <entry key="value" type="xstring" value="bottom"/>
        </config>
        <config key="Variable_3">
            <entry key="type" type="xstring" value="variable"/>
            <entry key="name" type="xstring" value="filter_switch"/>
            <entry key="class" type="xstring" value="STRING"/>
            <entry key="value" type="xstring" value="bottom"/>
        </config>
        <config key="Variable_4">
            <entry key="type" type="xstring" value="variable"/>
            <entry key="name" type="xstring" value="case1port"/>
            <entry key="class" type="xstring" value="INTEGER"/>
            <entry key="value" type="xint" value="0"/>
        </config>
        <config key="Variable_5">
            <entry key="type" type="xstring" value="variable"/>
            <entry key="name" type="xstring" value="case2port"/>
            <entry key="class" type="xstring" value="INTEGER"/>
            <entry key="value" type="xint" value="1"/>
        </config>
        <config key="Variable_6">
            <entry key="type" type="xstring" value="variable"/>
            <entry key="name" type="xstring" value="summary_cols_sample"/>
            <entry key="class" type="xstring" value="STRING"/>
            <entry key="value" type="xstring" value="Precursor.Normalised_1_log2_bin_sum;Precursor.Normalised_1_log2_bin_sum;Precursor.Normalised_1_log2_bin_sum;Precursor.Normalised_2_log2_bin_sum;Precursor.Normalised_2_log2_bin_sum;Precursor.Normalised_2_log2_bin_sum"/>
        </config>
        <config key="Variable_7">
            <entry key="type" type="xstring" value="variable"/>
            <entry key="name" type="xstring" value="summary_cols_repl"/>
            <entry key="class" type="xstring" value="STRING"/>
            <entry key="value" type="xstring" value=""/>
        </config>
        <config key="Variable_8">
            <entry key="type" type="xstring" value="variable"/>
            <entry key="name" type="xstring" value="summary_col_filter"/>
            <entry key="class" type="xstring" value="STRING"/>
            <entry key="value" type="xstring" value="*_log2_bin_sum"/>
        </config>
        <config key="Variable_9">
            <entry key="type" type="xstring" value="variable"/>
            <entry key="name" type="xstring" value="summary_exclude_col_filter"/>
            <entry key="class" type="xstring" value="STRING"/>
            <entry key="value" type="xstring" value="*all_log2_bin_sum"/>
        </config>
        <config key="Variable_10">
            <entry key="type" type="xstring" value="variable"/>
            <entry key="name" type="xstring" value="remove_all_switch"/>
            <entry key="class" type="xstring" value="STRING"/>
            <entry key="value" type="xstring" value="bottom"/>
        </config>
        <config key="Variable_11">
            <entry key="type" type="xstring" value="variable"/>
            <entry key="name" type="xstring" value="threshold_type"/>
            <entry key="class" type="xstring" value="STRING"/>
            <entry key="value" type="xstring" value="top"/>
        </config>
    </config>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="sourceCode" type="xstring" value="# changes the flowvariable holding the normalized columns suffix to be compatible with regex columns renaming%%00010flow_variables['suffix_to_append_regex'] = &quot;$1&quot; + flow_variables['suffix_to_append']%%00010%%00010# creates variable for not used columns removal IF switch%%00010if flow_variables['remove_not_used'] == 1:%%00010    flow_variables['if_switch'] = 'top'%%00010elif flow_variables['remove_not_used'] == 0:%%00010    flow_variables['if_switch'] = 'bottom'%%00010%%00010# switch for filtering rows%%00010if flow_variables['filter_rows (index)'] == 0:%%00010%%00009flow_variables['filter_switch'] = 'top'%%00010else:%%00010%%00009flow_variables['filter_switch'] = 'bottom'%%00010%%00010# two case switches based on the operator%%00010operators = {%%00010%%00009&quot;&lt;&quot;: [0, 0],%%00010%%00009&quot;&gt;&quot;: [0, 1],%%00010%%00009&quot;&lt;=&quot;: [1, 0],%%00010%%00009&quot;&gt;=&quot;: [1, 1],%%00010%%00009&quot;==&quot;: [2, 0],%%00010%%00009&quot;!=&quot;: [2, 1]%%00010%%00009}%%00010%%00010flow_variables['case1port'] = operators[flow_variables['operator']][0]%%00010flow_variables['case2port'] = operators[flow_variables['operator']][1]%%00010%%00010# if summary fields are empty or contain &quot;none&quot;%%00010if flow_variables['design'] == '' or flow_variables['design'] == 'none' or flow_variables['design'] == 'None':%%00010%%00009flow_variables['sample_type_summary'] = 0%%00010%%00010if flow_variables['biol_replicates'] == '' or flow_variables['biol_replicates'] == 'none' or flow_variables['biol_replicates'] == 'None':%%00010%%00009flow_variables['biol_repl_summary'] = 0%%00009%%00010%%00010# create list of summary columns%%00010summary_cols_sample = []%%00010summary_cols_repl = []%%00010%%00010if flow_variables['sample_type_summary'] == 1:%%00010%%00009samples = [x.strip() for x in flow_variables['design'].split(',')]%%00010%%00009%%00010%%00009for i in range(0,len(samples)):%%00010%%00009%%00009x = flow_variables['prefix_summary'] + samples[i] + flow_variables['suffix_summary']%%00010%%00009%%00009summary_cols_sample.append(x)%%00010%%00010if flow_variables['biol_repl_summary'] == 1:%%00010%%00009samples = [x.strip() for x in flow_variables['design'].split(',')]%%00010%%00009replicates = [x.strip() for x in flow_variables['biol_replicates'].split(',')]%%00010%%00009%%00009%%00010%%00009for i in range(0,len(samples)):%%00010%%00009%%00009x = samples[i] + '_' + replicates[i] + flow_variables['suffix_summary']%%00010%%00009%%00009summary_cols_repl.append(x)%%00010%%00010%%00009%%00009if flow_variables['sample_type_summary'] == 0:%%00010%%00009%%00009%%00009y = samples[i] + flow_variables['suffix_summary']%%00010%%00009%%00009%%00009summary_cols_sample.append(y)%%00010%%00010flow_variables['summary_cols_sample'] = ';'.join(summary_cols_sample)%%00010flow_variables['summary_cols_repl'] = ';'.join(summary_cols_repl)%%00010%%00010# filtering of columns prior%%00010flow_variables['summary_col_filter'] = '*' + flow_variables['suffix_summary']%%00010flow_variables['summary_exclude_col_filter'] = '*' + 'all' + flow_variables['suffix_summary']%%00010%%00010# use design for filtering?%%00010if flow_variables['filter_rows (index)'] != 0 and flow_variables['design'].strip() == '':%%00010%%00009flow_variables['remove_all_switch'] = 'top'%%00010else:%%00010%%00009flow_variables['remove_all_switch'] = 'bottom'%%00010%%00010# percentage or integer threshold?%%00010if '%' in flow_variables['thresholds']:%%00010%%00009flow_variables['threshold_type'] = 'top'%%00010%%00009flow_variables['thresholds'] = flow_variables['thresholds'].replace('%', '')%%00010else:%%00010%%00009flow_variables['threshold_type'] = 'bottom'"/>
        <entry key="rowLimit" type="xint" value="1000"/>
        <entry key="convertMissingToPython" type="xboolean" value="false"/>
        <entry key="convertMissingFromPython" type="xboolean" value="false"/>
        <entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
        <entry key="sentinelValue" type="xint" value="0"/>
        <entry key="chunkSize" type="xint" value="500000"/>
        <entry key="pythonVersionOption" type="xstring" value="python3"/>
        <entry key="python2Command" type="xstring" value=""/>
        <entry key="python3Command" type="xstring" value="/home/knimeuser/.pyenv/versions/4-5-2a/bin/python3"/>
    </config>
    <config key="variables">
        <entry key="version" type="xstring" value="V_2019_09_13"/>
        <config key="tree">
            <config key="python3Command">
                <entry key="used_variable" type="xstring" value="python3command"/>
                <entry key="exposed_variable" type="xstring" isnull="true" value=""/>
            </config>
        </config>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="creates regex compatible %%00010variable to add suffix, %%00010%%00010creates if_switch variable,%%00010%%00010creates two case switch variables %%00010based on the operator"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="508"/>
        <entry key="y-coordinate" type="xint" value="199"/>
        <entry key="width" type="xint" value="224"/>
        <entry key="height" type="xint" value="112"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="10"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles"/>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="IDLE"/>
    <entry key="factory" type="xstring" value="org.knime.python2.nodes.variables.Python2VariablesNodeFactory"/>
    <entry key="node-name" type="xstring" value="Python Edit Variable (legacy)"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.7.0.v202211291448"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Python 2 Integration (legacy)"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.7.1.v202301311311"/>
    <config key="factory_settings"/>
    <entry key="name" type="xstring" value="Python Edit Variable (legacy)"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>
