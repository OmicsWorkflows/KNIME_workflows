<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="sourceCode" type="xstring" value="# create an empty string for graph subtitle so errors aren't raised%%00010flow_variables['graph_subtitle'] = ''%%00010flow_variables['prefix'] = ''%%00010flow_variables['suffix'] = ''%%00010%%00010# create a list containing normalization tests%%00010method_list = flow_variables['methods'].split(',')%%00010%%00010# create a list of tests used%%00010methods = []%%00010%%00010if 'no normalization' in method_list:%%00010%%00009methods.append('0')%%00010%%00009%%00010if 'median (linear)' in method_list:%%00010%%00009methods.append('1')%%00010%%00009%%00010if 'quantile (non-linear)' in method_list:%%00010%%00009methods.append('2')%%00010%%00009%%00010if 'loessF (non-linear)' in method_list:%%00010%%00009methods.append('3')%%00010%%00010if 'DIA-NN' in method_list:%%00010%%00009methods.append('4')%%00010%%00010if 'DIA-NN with MaxLFQ' in method_list:%%00010%%00009methods.append('5')%%00010%%00010flow_variables['methods_no'] = len(methods)%%00010flow_variables['methods_list'] = ','.join(methods)%%00010%%00009%%00010# create a list containing graphs%%00010graph_list = flow_variables['graphs'].split(',')%%00010%%00010# create a series of switch variables for every graph%%00010if 'violin plot (width based on count)' in graph_list:%%00010%%00009flow_variables['graph_violin_widthcount'] = 'top'%%00010else:%%00010%%00009flow_variables['graph_violin_widthcount'] = 'bottom'%%00010%%00009%%00010if 'violin plot (width same for all)' in graph_list:%%00010%%00009flow_variables['graph_violin_widthsame'] = 'top'%%00010else:%%00010%%00009flow_variables['graph_violin_widthsame'] = 'bottom'%%00010%%00009%%00010if 'box plot' in graph_list:%%00010%%00009flow_variables['graph_boxplot'] = 'top'%%00010else:%%00010%%00009flow_variables['graph_boxplot'] = 'bottom'%%00010%%00009%%00010if 'kernel density plot' in graph_list:%%00010%%00009flow_variables['graph_density'] = 'top'%%00010else:%%00010%%00009flow_variables['graph_density'] = 'bottom'%%00010%%00009%%00010if 'correlation clustermap (manual center)' in graph_list:%%00010%%00009flow_variables['graph_correlation_manual'] = 'top'%%00010else:%%00010%%00009flow_variables['graph_correlation_manual'] = 'bottom'%%00010%%00010if 'correlation clustermap (automatic center)' in graph_list:%%00010%%00009flow_variables['graph_correlation_automatic'] = 'top'%%00010else:%%00010%%00009flow_variables['graph_correlation_automatic'] = 'bottom'%%00010%%00010if 'hierarchical clustering' in graph_list:%%00010%%00009flow_variables['graph_hierarchy'] = 'top'%%00010else:%%00010%%00009flow_variables['graph_hierarchy'] = 'bottom'%%00010%%00010if 'scatter plot matrix' in graph_list:%%00010%%00009flow_variables['graph_scatter'] = 'top'%%00010else:%%00010%%00009flow_variables['graph_scatter'] = 'bottom'%%00010%%00010if 'scatter plot matrix (MA plots)' in graph_list:%%00010%%00009flow_variables['graph_ma'] = 'top'%%00010else:%%00010%%00009flow_variables['graph_ma'] = 'bottom'%%00010%%00010# subset switch, if a subset is going to be plotted individually%%00010if flow_variables['subset_bool'] == 1:%%00010%%00009flow_variables['subset_switch'] = 'top'%%00010else:%%00010%%00009flow_variables['subset_switch'] = 'bottom'%%00010%%00010# create a list of subset graphs%%00010if flow_variables['subset_bool'] == 1:%%00010%%00009subset_graphs_list = flow_variables['subset_graphs'].split(',')%%00010%%00010%%00009if 'violin plot (width based on count)' in subset_graphs_list:%%00010%%00009%%00009flow_variables['subset_violin_widthcount'] = 'top'%%00010%%00009else:%%00010%%00009%%00009flow_variables['subset_violin_widthcount'] = 'bottom'%%00010%%00009%%00010%%00009if 'violin plot (width same for all)' in subset_graphs_list:%%00010%%00009%%00009flow_variables['subset_violin_widthsame'] = 'top'%%00010%%00009else:%%00010%%00009%%00009flow_variables['subset_violin_widthsame'] = 'bottom'%%00010%%00009%%00009%%00010%%00009if 'box plot' in subset_graphs_list:%%00010%%00009%%00009flow_variables['subset_boxplot'] = 'top'%%00010%%00009else:%%00010%%00009%%00009flow_variables['subset_boxplot'] = 'bottom'%%00010%%00009%%00009%%00010%%00009if 'kernel density plot' in subset_graphs_list:%%00010%%00009%%00009flow_variables['subset_density'] = 'top'%%00010%%00009else:%%00010%%00009%%00009flow_variables['subset_density'] = 'bottom'%%00010%%00009%%00009%%00010%%00009if 'correlation clustermap (manual center)' in subset_graphs_list:%%00010%%00009%%00009flow_variables['subset_correlation_manual'] = 'top'%%00010%%00009else:%%00010%%00009%%00009flow_variables['subset_correlation_manual'] = 'bottom'%%00010%%00010%%00009if 'correlation clustermap (automatic center)' in subset_graphs_list:%%00010%%00009%%00009flow_variables['subset_correlation_automatic'] = 'top'%%00010%%00009else:%%00010%%00009%%00009flow_variables['subset_correlation_automatic'] = 'bottom'%%00010%%00009%%00010%%00009if 'hierarchical clustering' in subset_graphs_list:%%00010%%00009%%00009flow_variables['subset_hierarchy'] = 'top'%%00010%%00009else:%%00010%%00009%%00009flow_variables['subset_hierarchy'] = 'bottom'%%00010%%00009%%00010%%00009if 'scatter plot matrix' in subset_graphs_list:%%00010%%00009%%00009flow_variables['subset_scatter'] = 'top'%%00010%%00009else:%%00010%%00009%%00009flow_variables['subset_scatter'] = 'bottom'%%00010%%00009%%00010%%00009if 'scatter plot matrix (MA plots)' in subset_graphs_list:%%00010%%00009%%00009flow_variables['subset_ma'] = 'top'%%00010%%00009else:%%00010%%00009%%00009flow_variables['subset_ma'] = 'bottom'%%00010%%00010# create a counter for a counting loop and removes any leading or trailing white spaces and empty items from the subsets list flow variable%%00010flow_variables['counting_loop'] = 1%%00010%%00010if flow_variables['subset_bool'] == 1:%%00010%%00009subset_list = list(filter(None, [s.strip() for s in flow_variables['subset_list'].split(',')]))%%00010%%00009flow_variables['counting_loop'] = len(subset_list)%%00010%%00009flow_variables['subset_list'] = &quot;,&quot;.join(subset_list)%%00010%%00010# alter prefix flow variable%%00010flow_variables['all_prefix'] = flow_variables['all_prefix'].strip()%%00010%%00010if flow_variables['all_prefix'] != '':%%00010%%00009if flow_variables['all_prefix'][-1] != '_':%%00010%%00009%%00009flow_variables['all_prefix'] = flow_variables['all_prefix'] + '_'%%00010%%00010# alter suffix flow variable%%00010flow_variables['all_suffix'] = flow_variables['all_suffix'].strip()%%00010 %%00010if flow_variables['all_suffix'] != '':%%00010%%00009if flow_variables['all_suffix'][0] != '_':%%00010%%00009%%00009flow_variables['all_suffix'] = '_' + flow_variables['all_suffix']"/>
        <entry key="rowLimit" type="xint" value="1000"/>
        <entry key="convertMissingToPython" type="xboolean" value="false"/>
        <entry key="convertMissingFromPython" type="xboolean" value="false"/>
        <entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
        <entry key="sentinelValue" type="xint" value="0"/>
        <entry key="chunkSize" type="xint" value="500000"/>
        <entry key="pythonVersionOption" type="xstring" value="python3"/>
        <entry key="python2Command" type="xstring" value=""/>
        <entry key="python3Command" type="xstring" value="/home/knimeuser/.pyenv/versions/4-5-2a/bin/python3"/>
    </config>
    <config key="variables">
        <entry key="version" type="xstring" value="V_2019_09_13"/>
        <config key="tree">
            <config key="python3Command">
                <entry key="used_variable" type="xstring" value="python3command"/>
                <entry key="exposed_variable" type="xstring" isnull="true" value=""/>
            </config>
        </config>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="edit variables"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="849"/>
        <entry key="y-coordinate" type="xint" value="119"/>
        <entry key="width" type="xint" value="142"/>
        <entry key="height" type="xint" value="17"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="11"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles"/>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="IDLE"/>
    <entry key="factory" type="xstring" value="org.knime.python2.nodes.variables.Python2VariablesNodeFactory"/>
    <entry key="node-name" type="xstring" value="Python Edit Variable"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.5.0.v202111232310"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.5.2.v202203041212"/>
    <config key="factory_settings"/>
    <entry key="name" type="xstring" value="Python Edit Variable"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>
