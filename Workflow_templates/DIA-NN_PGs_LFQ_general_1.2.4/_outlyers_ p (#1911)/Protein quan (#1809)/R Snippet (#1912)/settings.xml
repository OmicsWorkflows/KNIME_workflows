<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="script" type="xstring" value="library(dplyr)%%00010library(tidyr)%%00010%%00010df &lt;- knime.in%%00010%%00010# what columns to return%%00010cols &lt;- unlist(strsplit(knime.flow.in[[&quot;columns_to_return&quot;]], ','))%%00010%%00010# list to store output dfs%%00010df_list &lt;- list(normal = df)%%00010%%00010# log2 values%%00010if ('log2 of absolute values' %in% cols) {%%00010%%00009temp &lt;- df |&gt;%%00010%%00009%%00009mutate(quantity = log2(quantity),%%00010%%00009%%00009sample = paste0(sample, '_log2'))%%00010%%00009%%00009%%00010%%00009# replace Inf values%%00010%%00009i &lt;- unlist(lapply(temp$quantity, function(x) is.finite(x) == FALSE))%%00010%%00009temp$quantity[i] &lt;- NA%%00010%%00009%%00010%%00009df_list$log2 &lt;- temp%%00010}%%00010%%00010# proportion values%%00010if ('ppm' %in% cols | 'percentages' %in% cols | 'log2 of ppm' %in% cols) {%%00010%%00009temp &lt;- df |&gt;%%00010%%00009%%00009group_by(sample) |&gt;%%00010%%00009%%00009mutate(sum = sum(quantity, na.rm=TRUE),%%00010%%00009%%00009%%00009  quantity = quantity/sum) |&gt;%%00010%%00009%%00009as.data.frame() |&gt;%%00010%%00009%%00009select(-sum)%%00010%%00010%%00009if ('ppm' %in% cols) {%%00010%%00009%%00009temp_ppm &lt;- temp |&gt; %%00010%%00009%%00009%%00009%%00009%%00009mutate(quantity = quantity * 1000000,%%00010%%00009%%00009%%00009%%00009%%00009%%00009  sample = paste0(sample, '_ppm'))%%00010%%00009%%00009df_list$ppm &lt;- temp_ppm%%00010%%00009}%%00010%%00010%%00009if ('log2 of ppm' %in% cols) {%%00010%%00009%%00009temp_ppm_log2 &lt;- temp |&gt; %%00010%%00009%%00009%%00009%%00009%%00009mutate(quantity = log2(quantity * 1000000),%%00010%%00009%%00009%%00009%%00009%%00009%%00009  sample = paste0(sample, '_ppm_log2'))%%00010%%00009%%00009temp_ppm_log2$quantity[!is.finite(temp_ppm_log2$quantity)] &lt;- NA%%00010%%00009%%00009df_list$ppm_log2 &lt;- temp_ppm_log2%%00010%%00009}%%00010%%00010%%00009if ('percentages' %in% cols) {%%00010%%00009%%00009temp_perc &lt;- temp |&gt; %%00010%%00009%%00009%%00009%%00009%%00009mutate(quantity = quantity * 100,%%00010%%00009%%00009%%00009%%00009%%00009%%00009  sample = paste0(sample, '_perc'))%%00010%%00009%%00009df_list$perc &lt;- temp_perc%%00010%%00009}%%00010}%%00010%%00010# all together%%00010df_all &lt;- do.call(rbind, df_list)%%00010df_all &lt;- df_all |&gt;%%00010%%00009spread(key = 'sample', value = 'quantity')%%00010%%00010knime.out &lt;- df_all"/>
        <entry key="templateUUID" type="xstring" isnull="true" value=""/>
        <entry key="version" type="xstring" value="version 1.x"/>
        <entry key="Output non numbers (NaN, Inf, -Inf) as missing cells" type="xboolean" value="false"/>
        <entry key="sendRowNames" type="xboolean" value="true"/>
        <entry key="sendBatchSize" type="xint" value="10000"/>
        <entry key="knimeInType" type="xstring" value="data.frame"/>
        <entry key="overwriteRHome" type="xboolean" value="false"/>
        <entry key="rHome" type="xstring" value=""/>
        <entry key="useRPathHome" type="xboolean" value="true"/>
        <entry key="condaVariableName" type="xstring" isnull="true" value=""/>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="optionally calculate %%00010additional columns"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="2289"/>
        <entry key="y-coordinate" type="xint" value="259"/>
        <entry key="width" type="xint" value="142"/>
        <entry key="height" type="xint" value="32"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="10"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles">
            <config key="style_0">
                <entry key="start" type="xint" value="0"/>
                <entry key="length" type="xint" value="40"/>
                <entry key="fontname" type="xstring" value="Sans"/>
                <entry key="fontstyle" type="xint" value="0"/>
                <entry key="fontsize" type="xint" value="10"/>
                <entry key="fgcolor" type="xint" value="0"/>
            </config>
        </config>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="IDLE"/>
    <entry key="factory" type="xstring" value="org.knime.r.RSnippetNodeFactory"/>
    <entry key="node-name" type="xstring" value="R Snippet"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME R-Project nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.r"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.7.0.v202206271529"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Interactive R Statistics Integration"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.r.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.7.0.v202211090002"/>
    <config key="factory_settings"/>
    <entry key="name" type="xstring" value="R Snippet"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>
